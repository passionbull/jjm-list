{"version":3,"sources":["index.js","App.js","View/HolderListItem.js","Steem/steemController.js","Steem/steemConnect.js","serviceWorker.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactDom","_App","serviceWorker","_interopRequireWildcard","ReactDOM","render","default","createElement","document","getElementById","unregister","_reactNativeWeb","_sscjs","_HolderListItem","_steemController","_steemConnect","sc","steemController","App","state","holders","symbol","maintainer","sum_balance","holderCnt","holderAll","updated","watingListUpdate","getPostingFromDate","modalVisible","sign_in","getWatingList","_this","setState","holder_id","dt","Date","setDate","getDate","startDate","toISOString","split","show_dt","toLocaleString","tHolders","holders_data","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","holder","value","getPostingByBlog","account","_assertThisInitialized2","err","return","filtering","window","alert","filter","item","voted","latest_posting_jjm","balance","console","log","actionVoting","votedReculsive","sscLoad","arguments","ssc","SSC","stream","res","find","result","lastPrice","volume","highestBid","lowestAsk","tData","sort","a","b","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","sumBalance","_arr","_i","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","mt","findAccount","_arr2","_i2","rate","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","voting_rate","Math","floor","hid","loginSteemConnect2","getLoginURL","revokeToken","link","steemConnect","location","href","AsyncStorage","removeItem","checkToken","url","indexOf","tokens","params","forEach","e","_e$split","_e$split2","_slicedToArray2","key","val","setItem","access_token","error","getAsyncToken","_callee","_regenerator","wrap","_context","prev","getItem","sent","abrupt","t0","warn","stop","_this2","this","cnt","list","index","that","vote","steem_account","View","style","flex","flexDirection","width","paddingLeft","paddingTop","ActivityIndicator","size","color","paddingRight","Button","title","disabled","onPress","Text","fontWeight","fontSize","paddingBottom","toFixed","padding","FlatList","data","extraData","renderItem","_ref2","id","holderID","latestLink","_this3","then","token","setAccessToken","me","_ref3","JSON","parse","json_metadata","profile","name","catch","author","start_author","start_permlink","c","query","tag","limit","getDiscussionsByBlog","response","length_posts","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","post","created","active_votes","voter","permlink","updatedCallback","Component","hotWrapper","Platform","OS","require","hot","module","HolderListItem","_onPress","borderWidth","props","React","PureComponent","_steem","client","Client","getVotingInfo","database","call","o","getPosting","_callee2","comp","last_permlink","last_author","postInfo","_args2","_context2","getDiscussionsByCreated","posts","slice","Promise","resolve","reject","steem","api","sc2","Initialize","app","callbackURL","accessToken","scope","config","navigator","publicUrl","URL","process","origin","addEventListener","swUrl","concat","isLocalhost","fetch","contentType","headers","get","status","ready","registration","reload","registerValidSW","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.c20f7980.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport {\n  Text,Platform,\n  View, AsyncStorage,\n  Button, FlatList, ActivityIndicator\n} from 'react-native';\nimport SSC from 'sscjs';\nimport HolderListItem from './View/HolderListItem';\nimport steemController from './Steem/steemController'\nimport steemConnect from './Steem/steemConnect';\n\nvar sc = new steemController();\n\nclass App extends Component {\n    state = {\n        holders: [],\n        symbol: '',\n        maintainer: ['virus707', 'goldenticket', 'jjm13'],\n        sum_balance:'',\n        holderCnt:0, holderAll:0,\n        updated: true, watingListUpdate: false, getPostingFromDate: 7,\n        modalVisible: false,\n        sign_in: false,\n\n    }\n\n    getWatingList = () => {\n        // update holders link and voted\n        this.setState({holderCnt:0, updated:false})\n        var holder_id = 0;\n        var dt = new Date();  \n        dt.setDate(dt.getDate() - this.state.getPostingFromDate);\n        var startDate = dt.toISOString().split('.')[0];\n        var show_dt = dt.toLocaleString();\n        var tHolders = this.state.holders_data\n        \n        this.setState({holderAll:tHolders.length, show_dt})\n        for (const holder of tHolders) {\n            this.getPostingByBlog(holder.account,'','',this, holder_id, tHolders, startDate, 0);\n            holder_id = holder_id +1;\n        }        \n    }\n\n    filtering = () => {\n\n        var holders = this.state.holders_data;\n        this.setState({updated:false, holders_data:[]},\n            () => {\n                window.alert('updated!');\n                holders = holders.filter(item => item.voted !== true)\n                holders = holders.filter(item => item.latest_posting_jjm !== \"\")\n                holders = holders.filter(item => item.balance !== \"0 JJM\")\n                // holders.sort(function(x, y) {\n                //     return (x.voted === y.voted)? 0 : x.voted? 1 : -1;\n                // });\n\n                console.log(holders);\n                this.setState({updated:true,holders_data:holders, watingListUpdate:true})\n            })\n    }    \n\n    updatedCallback(holders){\n        var cnt = this.state.holderCnt;\n        cnt = cnt + 1;\n        this.setState({holderCnt:cnt})\n        if(cnt === this.state.holderAll)\n        {\n            console.log(holders);\n            this.setState({\n                holders_data:holders,\n                updated:true\n            }, \n            () => {\n                // window.alert('updated!');\n                this.filtering();\n                  }\n            );\n        }\n    }\n\n    votedReculsive(list, index,length,that){\n        steemConnect.vote(that.state.steem_account,list[index].account, list[index].latest_posting_jjm, list[index].voting_rate*100, function(err,res){\n            console.log('index',index, list[index].account);\n            console.log(err,res);\n            index = index + 1;\n            if(index === length){\n                that.setState({updated:true})\n                window.alert('updated!');\n                return;\n            }\n            that.votedReculsive(list,index,length,that);\n        })\n    }\n\n    actionVoting = () => {\n        var holders = this.state.holders_data;\n        this.setState({updated:false, watingListUpdate:false},()=>{\n            this.votedReculsive(holders,0,holders.length,this);\n        })\n    }\n\n    render() {\n        return (\n\n        <View style={{flex: 1,}}>\n            <View style={{flex: 1, flexDirection: 'row', width:500, paddingLeft: 20, paddingTop: 20}}>\n                {this.state.updated === true? <View/> :<ActivityIndicator size=\"large\" color=\"#0000ff\" />}\n                <View style={{flex: 1,paddingRight:10}}>\n                    <Button style={{}} title='Waiting list' disabled={this.state.updated === true? false:true} onPress={this.getWatingList}/>\n                </View>\n                <View style={{flex: 1,paddingRight:10}}>\n                    <Button style={{}} title='Voting' disabled={this.state.watingListUpdate === true? false:true} onPress={this.actionVoting}/>\n                </View>\n                <View style={{flex: 1,}}>\n                    <Button style={{}} title={this.state.sign_in === false? 'Sign in with SteemConnect':'Sign out'} onPress={this.loginSteemConnect2}/>\n                </View>\n            </View>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 20, paddingLeft: 20, paddingTop: 20, paddingBottom:3}}>Token Info</Text>\n            <Text style={{color: 'black', fontSize: 15, paddingLeft: 20, paddingBottom: 5}}>Last: {this.state.lastPrice} STEEM, 24h Vol: {this.state.volume} STEEM, Bid: {this.state.highestBid} STEEM, Ask: {this.state.lowestAsk} STEEM</Text>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 16, paddingLeft: 20, paddingBottom: 3}}>총 홀더 수 : {this.state.holders.length}</Text>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 16, paddingLeft: 20}}>유통물량 : {(this.state.sum_balance*1).toFixed(2)} JJM</Text>\n            <View style={{flex: 1, flexDirection: 'row', paddingTop: 30, paddingLeft: 20}}>\n            <Text style={{flex: 1, color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Account</Text>\n            <Text style={{flex: 1, color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Balance</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Stake</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Voting Percent</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Voted after {this.state.show_dt}</Text>\n            <Text style={{flex: 1,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Latest link</Text>\n            </View>\n            <View style={{flex: 1, paddingLeft: 20}}>\n            <FlatList\n                data= {this.state.holders_data}\n                extraData={this.state.updated}\n                renderItem={({item}) => <HolderListItem id={item.id} account ={item.account} balance = {item.balance} voting_rate = {item.voting_rate}\n                rate = {item.rate} holderID = {item.hid} voted = {item.voted} latestLink ={'https://busy.org/@'+item.account+'/'+item.latest_posting_jjm}/>}\n                />\n            </View>\n        </View>\n\n        )\n    }\n\n\n\n    sscLoad = (symbol= 'JJM') =>{\n        const ssc = new SSC('https://api.steem-engine.com/rpc/');\n        ssc.stream((err, res) => {\n        });\n    \n        ssc.find('market', 'metrics', {'symbol':symbol}, 1000, 0, [], (err, result) => {\n          this.setState({\n            lastPrice: result[0].lastPrice,\n            volume: result[0].volume,\n            highestBid: result[0].highestBid,\n            lowestAsk: result[0].lowestAsk\n          });\n        });\n    \n    \n        ssc.find('tokens', 'balances', {'symbol':symbol}, 1000, 0, [], (err, result) => {\n          var tHolders = []\n          var tData = []\n    \n          result.sort(function (a,b){\n            return b.balance - a.balance;\n          });\n          for (var holder of result) {\n            tHolders.push(holder)\n          }\n          var sumBalance = 0;\n    \n          /// add all balances\n          for (const holder of tHolders) {\n              sumBalance = sumBalance + 1*(holder.balance);\n          }\n    \n          /// remove maintainer balances\n          for (const mt of this.state.maintainer) {\n            var maintainer = this.findAccount(tHolders,mt);\n            if(maintainer !== undefined) \n              sumBalance = sumBalance - maintainer.balance;\n          }\n          this.setState({sum_balance: sumBalance});\n    \n          \n            /// calculate rate\n            var holder_id = 0;\n            for (const holder of tHolders) {\n                holder_id = holder_id +1;\n                holder.rate = holder.balance / sumBalance;\n                for (const mt of this.state.maintainer) {\n                    if(holder.account === mt) \n                        holder.rate = 0;\n                    }\n                var voting_rate = 1;\n                if(holder.balance/1000 > 45)\n                    voting_rate = voting_rate + 45;\n                else\n                    voting_rate = voting_rate + Math.floor(holder.balance/1000);\n                \n                \n                \n                tData.push({account: holder.account, balance: (holder.balance*1)+' '+symbol, rate: (holder.rate*1), \n                            hid:holder_id, voting_rate:voting_rate})\n            }\n            this.setState({holders: tHolders, holders_data: tData, sum_balance: sumBalance},\n                            () => {\n                                    // this.onPressButton1();\n                                }\n                          );\n        })\n    }\n\n    findAccount = (holders, account) =>\n    {\n      return holders.find(function(a){return a.account === account;});\n    }\n  \n    componentDidMount(){\n      var _symbol = 'JJM'\n      this.setState({symbol:_symbol});\n      this.sscLoad(_symbol);\n\n      var link = window.location.href;\n      this.checkToken(link);\n      this.getAsyncToken().then((token) => {\n          if(token === null)\n          {\n              this.setState({sign_in:false});\n          }\n          else\n          {\n              // AccessToken 셋팅\n              steemConnect.setAccessToken(token);\n              // 계정 정보 조회\n              steemConnect.me().then(({ account }) => {\n                  \n                  const { profile }  = JSON.parse(account.json_metadata);\n                  console.log('profile', account);\n                  this.setState({sign_in:true,steem_account:account.name});\n              }).catch(function(e){\n              });\n          }\n      });\n    }\n\n\n\n    loginSteemConnect2 = () => {\n        // Go to Commit screen\n        if(this.state.sign_in === false)\n            this.getLoginURL();\n        else\n            this.revokeToken();\n    }\n        \n    getLoginURL = () =>{\n        let link = steemConnect.getLoginURL();\n        window.location.href = link;\n    }\n\n    revokeToken = () =>{\n        steemConnect.revokeToken(function (err,res){\n            console.log(res);\n            AsyncStorage.removeItem('token');\n        })\n        this.setState({sign_in:false});\n    }\n\n    checkToken = (url) => {\n        if (url.indexOf('?access_token') > -1) {\n          try {\n            const tokens = {};\n            // 콜백 URL에서 accessToken 정보 추출하기\n            let params = url.split('?')[1];\n            params = params.split('&');\n            params.forEach(e => {\n              const [key, val] = e.split('=');\n              tokens[key] = val;\n            });\n            console.log('tokens:', tokens);\n            AsyncStorage.setItem('token', tokens.access_token);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      };\n\n    getAsyncToken = async () => {\n        try {\n            const value = await AsyncStorage.getItem('token');\n            return await value;\n        } catch (e) {\n            console.warn(e)\n            return null\n        }\n    };      \n\n    getPostingByBlog(author, start_author= '', start_permlink = '',that, holder_id, holders, startDate, c){\n        const size = 50;\n        var query = {\n            'tag': author,\n            'limit': size,\n            'start_author': start_author,\n            'start_permlink': start_permlink\n        };\n        sc.getDiscussionsByBlog(query).then(function(response) {\n            var length_posts = response.length\n            var voted = false;\n            var latest_posting_jjm = ''\n            for (const post of response) {\n                if(post.author === query.tag){\n                    if(post.created > startDate){\n                        if(voted ===false){\n                            voted = post.active_votes.find(function(a){return (a.voter === 'virus707')});\n                        }\n                        if( c === 0){\n                            latest_posting_jjm = post.permlink;\n                        }\n                        if (voted !== undefined)\n                            voted = true;\n                        else if(voted === undefined)\n                            voted = false;\n                        c = c + 1;\n                    }\n               }\n            }\n            if(length_posts < size || response[length_posts-1].created< startDate){      \n                if(holders[holder_id].account === author){\n                    holders[holder_id].voted = voted;\n                    holders[holder_id].latest_posting_jjm = latest_posting_jjm;\n                    that.updatedCallback(holders);\n                }\n                else{\n                    console.log('something is wrong.');\n                }\n                return;     \n            }\n            var start_author= response[length_posts-1].author;\n            var start_permlink= response[length_posts-1].permlink;\n            that.getPostingByBlog(author, start_author, start_permlink,that,holder_id,holders,startDate,c);\n        });\n    }\n}\n \n\nlet hotWrapper = () => () => App;\nif (Platform.OS === 'web') {\n  const { hot } = require('react-hot-loader');\n  hotWrapper = hot;\n}\nexport default hotWrapper(module)(App);\n","import React, { Component } from 'react';\nimport {\n    Text,\n    View,\n} from 'react-native';\n  \n\n\nexport default class HolderListItem extends React.PureComponent {\n    _onPress = () => {\n    };\n\n    render() {\n      return (\n          <View style={{flex: 1, flexDirection: 'row', paddingTop: 5,}}>\n            <View style={{flex: 1, borderWidth: 0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3}}>{this.props.holderID+'-'+this.props.account}</Text>\n            </View>\n  \n            <View style={{flex: 1, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3}}>{this.props.balance}</Text>\n            </View>\n  \n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{(100*this.props.rate).toFixed(3)}%</Text>\n            </View>\n\n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voting_rate}%</Text>\n            </View>\n\n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voted === undefined? '':''+this.props.voted}</Text>\n            </View>\n\n            <View style={{flex: 1, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voted === undefined? '':this.props.latestLink}</Text>\n            </View>\n\n\n          </View>\n  \n        );\n    }\n}","import steem from 'steem'\nimport {Client} from 'dsteem'\nconst client = new Client('https://api.steemit.com')\n\nexport default class steemController{\n    getVotingInfo = async (post) => {\n        return await client.database\n            .call('get_active_votes', [post.author, post.permlink])\n            .then(result => {\n                if(result.find(o => o.voter === 'virus707') ===undefined){\n                    console.log('Wait!!! voting ->'+post.author);\n                    post['voted'] = false;\n                }\n                else{\n                    console.log('Got!!! voting ->'+ post.author);\n                    post['voted'] = true;\n                }\n            });\n    };\n\n\n    getPosting = async (size, comp ,last_permlink='', last_author='') => {\n        size = size +1;\n        var query = {\"tag\": \"jjm\", \"limit\": size, \"start_permlink\":last_permlink, \"start_author\":last_author};\n        var postInfo = {'this':comp}\n        try{\n            let post = await this.getDiscussionsByCreated(query);\n            postInfo.posts = post.slice(0,size-1);\n            postInfo.last_permlink = post[size-1].permlink;\n            postInfo.last_author = post[size-1].author;\n        }catch(err){\n            console.log('err',err);\n        }\n        return await postInfo;\n    }\n\n    getDiscussionsByCreated = (query) => {\n        return new Promise((resolve, reject) => {\n          steem.api.getDiscussionsByCreated(query, function(err, response) {\n         if(err){\n           reject(err);\n         }\n         resolve(response);\n        });\n       });\n    }\n\n    getDiscussionsByBlog = (query) => {\n        return new Promise((resolve, reject) => {\n          steem.api.getDiscussionsByBlog(query, function(err, response) {\n         if(err){\n           reject(err);\n         }\n         resolve(response);\n        });\n       });\n    }\n    \n}","import sc2 from 'sc2-sdk';\n// import Config from '../../config';\n\nconst api = sc2.Initialize({\n  app: 'wp-steem-share',\n  callbackURL: 'https://passionbull.github.io/jjm-list',\n\taccessToken: 'access_token',\n\tscope: ['vote', 'comment']\n});\n\nexport default api;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}