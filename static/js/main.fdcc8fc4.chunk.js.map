{"version":3,"sources":["index.js","App.js","View/HolderListItem.js","Steem/steemController.js","Steem/steemConnect.js","Steem/SSCLoader.jsx","serviceWorker.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactDom","_App","serviceWorker","_interopRequireWildcard","ReactDOM","render","default","createElement","document","getElementById","unregister","_reactNativeWeb","_sscjs","_HolderListItem","_steemController","_steemConnect","_SSCLoader","sc","steemController","sscCon","sscController","App","state","holders","symbol","maintainer","sum_balance","holderCnt","holderAll","updated","watingListUpdate","getPostingFromDate","modalVisible","sign_in","prefix_text","getWatingList","_this","setState","holder_id","dt","Date","setDate","getDate","startDate","toISOString","split","show_posting_time","toLocaleString","voterDate","show_voter_time","tHolders","holders_data","filter","item","balance","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","holder","value","getPostingByBlog","account","_assertThisInitialized2","err","return","filtering","window","alert","voted","latest_posting_jjm","console","log","actionVoting","votedReculsive","sscLoad","arguments","ssc","SSC","stream","res","find","result","lastPrice","volume","highestBid","lowestAsk","getHoldersAsync","then","tData","sort","a","b","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","sumBalance","_arr","_i","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","mt","findAccount","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","rate","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","voting_rate","Math","floor","hid","loginSteemConnect2","getLoginURL","revokeToken","link","steemConnect","location","href","AsyncStorage","removeItem","checkToken","url","indexOf","tokens","params","forEach","e","_e$split","_e$split2","_slicedToArray2","key","val","setItem","access_token","error","getAsyncToken","_callee","_regenerator","wrap","_context","prev","getItem","sent","abrupt","t0","warn","stop","_this2","this","cnt","list","index","that","vote","steem_account","text","random","permlink","now","comment","tags","_this3","View","style","flex","flexDirection","width","paddingLeft","paddingTop","ActivityIndicator","size","color","paddingRight","Button","title","disabled","onPress","Text","fontWeight","fontSize","paddingBottom","toFixed","padding","FlatList","data","extraData","renderItem","_ref2","id","holderID","latestLink","_this4","token","setAccessToken","me","_ref3","JSON","parse","json_metadata","profile","name","catch","getPreFixedMessage","fetch","mode","response","json","responseJson","votingMessage","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","message","msg","author","start_author","start_permlink","c","query","tag","limit","getDiscussionsByBlog","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","post","isJJM","created","active_votes","voter","updatedCallback","Component","hotWrapper","Platform","OS","require","hot","module","HolderListItem","_onPress","borderWidth","props","React","PureComponent","_steem","client","Client","getVotingInfo","database","call","o","getPosting","_callee2","comp","last_permlink","last_author","postInfo","_args2","_context2","getDiscussionsByCreated","posts","slice","Promise","resolve","reject","steem","api","sc2","Initialize","app","callbackURL","accessToken","scope","_axios","SSCLoader","_classCallCheck2","findOne","method","concat","callApi","offset","type","v","getTime","token_info","holders_info","getCnt","getHolderOnce","stake","sumStake","sumStakeBalance","isNaN","sum","delegated","received","pending_unstake","stake_with_delegated","delegationsIn","delegatedStake","delegationsOut","receivedStake","pendingUnstake","config","navigator","publicUrl","URL","process","origin","addEventListener","swUrl","isLocalhost","contentType","headers","get","status","ready","registration","reload","registerValidSW","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.fdcc8fc4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport {\n  Text,Platform,\n  View, AsyncStorage,\n  Button, FlatList, ActivityIndicator\n} from 'react-native';\nimport SSC from 'sscjs';\nimport HolderListItem from './View/HolderListItem';\nimport steemController from './Steem/steemController'\nimport steemConnect from './Steem/steemConnect';\nimport sscController from './Steem/SSCLoader'\nvar sc = new steemController();\nvar sscCon = new sscController();\n\nclass App extends Component {\n    state = {\n        holders: [],\n        symbol: '',\n        maintainer: ['virus707', 'goldenticket', 'jjm13'],\n        sum_balance:'',\n        holderCnt:0, holderAll:0,\n        updated: true, watingListUpdate: false, getPostingFromDate: 7,\n        modalVisible: false,\n        sign_in: false,\n        prefix_text: [\"Congratulations on your decision to become a holder in JJM. Did you know that the daily upvote is increasing for 1% for each 1000JJM you are holding? Get a max of 46% upvote from @virus707's 450K SP which would equal holding 45,000JJM.\",\n                      \"Thank you for considering investing your precious resources in JJM. JJM is a token based on steem-engine.com using a side chain of Steem. With a holding Steem Power of 500K SP owned and bought from @virus707, this SP is used in combination with JJM tokens to upvote, reward and distribute dividends out of the JJM project to JJM token holders.\",\n                      \"Thank you for your continued support towards JJM. For each 1000 JJM you are holding, you can get an additional 1% of upvote. 10,000JJM would give you a 11% daily voting from the 450K SP virus707 account.\"]\n\n    }\n\n    getWatingList = () => {\n        // update holders link and voted\n        this.setState({holderCnt:0, updated:false})\n        var holder_id = 0;\n        var dt = new Date();  \n        dt.setDate(dt.getDate() - this.state.getPostingFromDate);\n        var startDate = dt.toISOString().split('.')[0];\n        var show_posting_time = dt.toLocaleString();\n\n        var voterDate = new Date();  \n        voterDate.setDate(voterDate.getDate() - 1);\n        var show_voter_time = voterDate.toLocaleString();\n        voterDate = voterDate.toISOString().split('.')[0];\n        \n\n        var tHolders = this.state.holders_data\n        tHolders = tHolders.filter(item => item.balance >=100)\n\n        \n        this.setState({holderAll:tHolders.length, show_posting_time, show_voter_time})\n        for (const holder of tHolders) {\n            this.getPostingByBlog(holder.account,'','',this, holder_id, tHolders, startDate, voterDate, 0);\n            holder_id = holder_id +1;\n        }        \n    }\n\n    filtering = () => {\n\n        var holders = this.state.holders_data;\n        this.setState({updated:false, holders_data:[]},\n            () => {\n                window.alert('updated!');\n                holders = holders.filter(item => item.voted !== true)\n                holders = holders.filter(item => item.latest_posting_jjm !== \"\")\n                holders = holders.filter(item => item.balance >=100)\n                // holders.sort(function(x, y) {\n                //     return (x.voted === y.voted)? 0 : x.voted? 1 : -1;\n                // });\n\n                console.log(holders);\n                this.setState({updated:true,holders_data:holders, watingListUpdate:true})\n            })\n    }    \n\n    updatedCallback(holders){\n        var cnt = this.state.holderCnt;\n        cnt = cnt + 1;\n        this.setState({holderCnt:cnt})\n        if(cnt === this.state.holderAll)\n        {\n            console.log(holders);\n            this.setState({\n                holders_data:holders,\n                updated:true\n            }, \n            () => {\n                // window.alert('updated!');\n                this.filtering();\n                  }\n            );\n        }\n    }\n\n    votedReculsive(list, index,length,that){\n        steemConnect.vote(that.state.steem_account,list[index].account, list[index].latest_posting_jjm, list[index].voting_rate*100, function(err,res){\n            console.log('index',index, list[index].account);\n            console.log('voting',err,res);\n            var text =  that.state.prefix_text[Math.floor(Math.random() * that.state.prefix_text.length)]\n            var permlink = 're-' + list[index].latest_posting_jjm + '-' + Math.floor(Date.now() / 1000);\n            var jsonMetadata =\n            {\n              \"tags\": ['jjm'],\n            };        \n\n            if(that.state.steem_account == 'virus707'){\n                // console.log( list[index].account, list[index].latest_posting_jjm, that.state.steem_account, permlink, '', text )\n                steemConnect.comment(list[index].account, list[index].latest_posting_jjm, that.state.steem_account, permlink, '', text, jsonMetadata, function (err, res) {\n                    console.log('comment',err,res);\n                    index = index + 1;\n                    if(index === length){\n                        that.setState({updated:true})\n                        window.alert('updated!');\n                        return;\n                    }\n                    that.votedReculsive(list,index,length,that);\n                });\n            }\n            else{\n                index = index + 1;\n                if(index === length){\n                    that.setState({updated:true})\n                    window.alert('updated!');\n                    return;\n                }\n                that.votedReculsive(list,index,length,that);\n            }\n        })\n    }\n\n    actionVoting = () => {\n        var holders = this.state.holders_data;\n        this.setState({updated:false, watingListUpdate:false},()=>{\n            this.votedReculsive(holders,0,holders.length,this);\n        })\n    }\n\n    render() {\n        return (\n\n        <View style={{flex: 1,}}>\n            <View style={{flex: 1, flexDirection: 'row', width:500, paddingLeft: 20, paddingTop: 20}}>\n                {this.state.updated === true? <View/> :<ActivityIndicator size=\"large\" color=\"#0000ff\" />}\n                <View style={{flex: 1,paddingRight:10}}>\n                    <Button style={{}} title='Waiting list' disabled={this.state.updated === true? false:true} onPress={this.getWatingList}/>\n                </View>\n                <View style={{flex: 1,paddingRight:10}}>\n                    <Button style={{}} title='Voting' disabled={this.state.watingListUpdate === true? false:true} onPress={this.actionVoting}/>\n                </View>\n                <View style={{flex: 1,}}>\n                    <Button style={{}} title={this.state.sign_in === false? 'Sign in with SteemConnect':'Sign out'} onPress={this.loginSteemConnect2}/>\n                </View>\n            </View>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 20, paddingLeft: 20, paddingTop: 20, paddingBottom:3}}>Token Info</Text>\n            <Text style={{color: 'black', fontSize: 15, paddingLeft: 20, paddingBottom: 5}}>Last: {this.state.lastPrice} STEEM, 24h Vol: {this.state.volume} STEEM, Bid: {this.state.highestBid} STEEM, Ask: {this.state.lowestAsk} STEEM</Text>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 16, paddingLeft: 20, paddingBottom: 3}}>총 홀더 수 : {this.state.holders.length}</Text>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 16, paddingLeft: 20}}>유통물량 : {(this.state.sum_balance*1).toFixed(2)} JJM</Text>\n            <View style={{flex: 1, flexDirection: 'row', paddingTop: 30, paddingLeft: 20}}>\n            <Text style={{flex: 1, color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Account</Text>\n            <Text style={{flex: 1, color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Balance</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Stake</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Voting Percent</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Voted after {this.state.show_voter_time}</Text>\n            <Text style={{flex: 1,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Latest link after {this.state.show_posting_time}</Text>\n            </View>\n            <View style={{flex: 1, paddingLeft: 20}}>\n            <FlatList\n                data= {this.state.holders_data}\n                extraData={this.state.updated}\n                renderItem={({item}) => <HolderListItem id={item.id} account ={item.account} balance = { (1*item.balance).toFixed(2)+' '+this.state.symbol} voting_rate = {item.voting_rate}\n                rate = {item.rate} holderID = {item.hid} voted = {item.voted} latestLink ={'https://busy.org/@'+item.account+'/'+item.latest_posting_jjm}/>}\n                />\n            </View>\n        </View>\n\n        )\n    }\n\n\n\n    sscLoad = (symbol= 'JJM') =>{\n    \n        const ssc = new SSC('https://api.steem-engine.com/rpc/');\n        ssc.stream((err, res) => {\n        });\n    \n        ssc.find('market', 'metrics', {'symbol':symbol}, 1000, 0, [], (err, result) => {\n          this.setState({\n            lastPrice: result[0].lastPrice,\n            volume: result[0].volume,\n            highestBid: result[0].highestBid,\n            lowestAsk: result[0].lowestAsk\n          });\n        });\n    \n\n\n        sscCon.getHoldersAsync(symbol).then( result =>{\n\n          var tHolders = []\n          var tData = []\n    \n          result.sort(function (a,b){\n            return b.balance - a.balance;\n          });\n          for (var holder of result) {\n            tHolders.push(holder)\n          }\n          var sumBalance = 0;\n    \n          /// add all balances\n          for (const holder of tHolders) {\n              sumBalance = sumBalance + 1*(holder.balance);\n          }\n    \n          /// remove maintainer balances\n          for (const mt of this.state.maintainer) {\n            var maintainer = this.findAccount(tHolders,mt);\n            if(maintainer !== undefined) \n              sumBalance = sumBalance - maintainer.balance;\n          }\n          this.setState({sum_balance: sumBalance});\n\n          // filtering balance more than 0\n          tHolders = tHolders.filter(item => (item.balance*1) > 0)\n\n          /// calculate rate\n            var holder_id = 0;\n            for (const holder of tHolders) {\n                holder_id = holder_id +1;\n                holder.rate = holder.balance / sumBalance;\n                for (const mt of this.state.maintainer) {\n                    if(holder.account === mt) \n                        holder.rate = 0;\n                    }\n                var voting_rate = 1;\n                if(holder.balance/1000 > 45)\n                    voting_rate = voting_rate + 45;\n                else\n                    voting_rate = voting_rate + Math.floor(holder.balance/1000);\n                tData.push({account: holder.account, balance: holder.balance, rate: (holder.rate*1), \n                            hid:holder_id, voting_rate:voting_rate})\n            }\n            this.setState({holders: tHolders, holders_data: tData, sum_balance: sumBalance},\n                            () => {\n                                    // this.onPressButton1();\n                                }\n                          );\n        })\n    }\n\n    findAccount = (holders, account) =>\n    {\n      return holders.find(function(a){return a.account === account;});\n    }\n  \n    componentDidMount(){\n      var _symbol = 'JJM'\n      this.setState({symbol:_symbol});\n      this.sscLoad(_symbol);\n\n      var link = window.location.href;\n      this.checkToken(link);\n      this.getAsyncToken().then((token) => {\n          if(token === null)\n          {\n              this.setState({sign_in:false});\n          }\n          else\n          {\n              // AccessToken 셋팅\n              steemConnect.setAccessToken(token);\n              // 계정 정보 조회\n              steemConnect.me().then(({ account }) => {\n                  \n                  const { profile }  = JSON.parse(account.json_metadata);\n                  console.log('profile', account);\n                  this.setState({sign_in:true,steem_account:account.name});\n              }).catch(function(e){\n              });\n          }\n      });\n\n      this.getPreFixedMessage(this);\n    }\n\n    getPreFixedMessage(that) {\n        return fetch('https://s3.ap-northeast-2.amazonaws.com/img.passionbull.net/test/jjm-voting-message.json',{mode: 'cors'})\n          .then((response) => response.json())\n          .then((responseJson) => {\n              var votingMessage = [];\n              for (const msg of responseJson.message) {\n                    votingMessage.push(msg.text)\n              }\n              that.setState({prefix_text:votingMessage}, () =>{\n                  console.log(that.state.prefix_text)\n              })\n            return responseJson.message;\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n\n    loginSteemConnect2 = () => {\n        // Go to Commit screen\n        if(this.state.sign_in === false)\n            this.getLoginURL();\n        else\n            this.revokeToken();\n    }\n        \n    getLoginURL = () =>{\n        let link = steemConnect.getLoginURL();\n        window.location.href = link;\n    }\n\n    revokeToken = () =>{\n        steemConnect.revokeToken(function (err,res){\n            console.log(res);\n            AsyncStorage.removeItem('token');\n        })\n        this.setState({sign_in:false});\n    }\n\n    checkToken = (url) => {\n        if (url.indexOf('?access_token') > -1) {\n          try {\n            const tokens = {};\n            // 콜백 URL에서 accessToken 정보 추출하기\n            let params = url.split('?')[1];\n            params = params.split('&');\n            params.forEach(e => {\n              const [key, val] = e.split('=');\n              tokens[key] = val;\n            });\n            console.log('tokens:', tokens);\n            AsyncStorage.setItem('token', tokens.access_token);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      };\n\n    getAsyncToken = async () => {\n        try {\n            const value = await AsyncStorage.getItem('token');\n            return await value;\n        } catch (e) {\n            console.warn(e)\n            return null\n        }\n    };      \n\n    getPostingByBlog(author, start_author= '', start_permlink = '',that, holder_id, holders, startDate, voterDate, c){\n        const size = 50;\n        var query = {\n            'tag': author,\n            'limit': size,\n            'start_author': start_author,\n            'start_permlink': start_permlink\n        };\n        sc.getDiscussionsByBlog(query).then(function(response) {\n            var length_posts = response.length\n            var voted = false;\n            var latest_posting_jjm = ''\n            for (const post of response) {\n                if(post.author === query.tag){\n                    var json_meta = JSON.parse(post.json_metadata);\n                    var isJJM = json_meta.tags.find(function(a){return a === 'jjm';});\n                    if(post.created > voterDate && isJJM === 'jjm' ){\n                        if(voted ===false){\n                            voted = post.active_votes.find(function(a){return (a.voter === 'virus707')});\n                        }\n                        if( c === 0){\n                            latest_posting_jjm = post.permlink;\n                        }\n                        if (voted !== undefined)\n                            voted = true;\n                        else if(voted === undefined)\n                            voted = false;\n                        c = c + 1;\n                    }\n               }\n            }\n                if(holders[holder_id].account === author){\n                    holders[holder_id].voted = voted;\n                    holders[holder_id].latest_posting_jjm = latest_posting_jjm;\n                    that.updatedCallback(holders);\n                }\n                else{\n                    console.log('something is wrong.');\n                }\n            \n            // var start_author= response[length_posts-1].author;\n            // var start_permlink= response[length_posts-1].permlink;\n            // that.getPostingByBlog(author, start_author, start_permlink,that,holder_id,holders,startDate, voterDate, c);\n        });\n    }\n}\n \n\nlet hotWrapper = () => () => App;\nif (Platform.OS === 'web') {\n  const { hot } = require('react-hot-loader');\n  hotWrapper = hot;\n}\nexport default hotWrapper(module)(App);\n","import React, { Component } from 'react';\nimport {\n    Text,\n    View,\n} from 'react-native';\n  \n\n\nexport default class HolderListItem extends React.PureComponent {\n    _onPress = () => {\n    };\n\n    render() {\n      return (\n          <View style={{flex: 1, flexDirection: 'row', paddingTop: 5,}}>\n            <View style={{flex: 1, borderWidth: 0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3}}>{this.props.holderID+'-'+this.props.account}</Text>\n            </View>\n  \n            <View style={{flex: 1, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3}}>{this.props.balance}</Text>\n            </View>\n  \n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{(100*this.props.rate).toFixed(3)}%</Text>\n            </View>\n\n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voting_rate}%</Text>\n            </View>\n\n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voted === undefined? '':''+this.props.voted}</Text>\n            </View>\n\n            <View style={{flex: 1, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voted === undefined? '':this.props.latestLink}</Text>\n            </View>\n\n\n          </View>\n  \n        );\n    }\n}","import steem from 'steem'\nimport {Client} from 'dsteem'\nconst client = new Client('https://api.steemit.com')\n\nexport default class steemController{\n    getVotingInfo = async (post) => {\n        return await client.database\n            .call('get_active_votes', [post.author, post.permlink])\n            .then(result => {\n                if(result.find(o => o.voter === 'virus707') ===undefined){\n                    console.log('Wait!!! voting ->'+post.author);\n                    post['voted'] = false;\n                }\n                else{\n                    console.log('Got!!! voting ->'+ post.author);\n                    post['voted'] = true;\n                }\n            });\n    };\n\n\n    getPosting = async (size, comp ,last_permlink='', last_author='') => {\n        size = size +1;\n        var query = {\"tag\": \"jjm\", \"limit\": size, \"start_permlink\":last_permlink, \"start_author\":last_author};\n        var postInfo = {'this':comp}\n        try{\n            let post = await this.getDiscussionsByCreated(query);\n            postInfo.posts = post.slice(0,size-1);\n            postInfo.last_permlink = post[size-1].permlink;\n            postInfo.last_author = post[size-1].author;\n        }catch(err){\n            console.log('err',err);\n        }\n        return await postInfo;\n    }\n\n    getDiscussionsByCreated = (query) => {\n        return new Promise((resolve, reject) => {\n          steem.api.getDiscussionsByCreated(query, function(err, response) {\n         if(err){\n           reject(err);\n         }\n         resolve(response);\n        });\n       });\n    }\n\n    getDiscussionsByBlog = (query) => {\n        return new Promise((resolve, reject) => {\n          steem.api.getDiscussionsByBlog(query, function(err, response) {\n         if(err){\n           reject(err);\n         }\n         resolve(response);\n        });\n       });\n    }\n    \n}","import sc2 from 'sc2-sdk';\n// import Config from '../../config';\n\nconst api = sc2.Initialize({\n  app: 'wp-steem-share',\n  callbackURL: 'https://passionbull.github.io/jjm-list',\n\taccessToken: 'access_token',\n\tscope: ['vote', 'comment']\n});\n\nexport default api;\n","import SSC from \"sscjs\";\nimport axios from \"axios\";\n\nexport default class SSCLoader {\n  constructor() {\n    // this.token_info = {};\n    this.maintainer = [\"null\"];\n    this.ssc = new SSC(\"https://api.steem-engine.com/rpc/\");\n    // this.getTokenInfo(\"RORS\").then(info => {\n    //   // console.log('all  suplly', info[0].supply)\n    //   // console.log('circulating', info[0].circulatingSupply)\n    //   // console.log('staked', info[0].totalStaked)\n    //   // console.log('balance??', info[0].circulatingSupply*1 - info[0].totalStaked*1)\n    // });\n    // this.getHoldersAsync(\"RORS\").then(r => {\n    //   console.log('r',r)});\n  }\n\n  getUserBalance(account = \"jacobyu\", symbol = \"RORS\") {\n    this.ssc\n      .findOne(\"tokens\", \"balances\", {\n        account,\n        symbol\n      })\n      .then(data => {\n        console.log(\"Balance\", data);\n      });\n  }\n\n  async callApi(url, params) {\n    return await axios({\n      url,\n      method: \"GET\",\n      params\n    })\n      .then(response => {\n        // console.log(response.data);\n        return response.data;\n      })\n      .catch(err => {\n        console.error(`Could not fetch data, url: ${url}`);\n        return {};\n      });\n  }\n\n  async getSteemEngineAccountHistoryAsync(account, token) {\n    return this.callApi(\"https://api.steem-engine.com/accounts/history\", {\n      account,\n      limit: 100,\n      offset: 0,\n      type: \"user\",\n      symbol: token,\n      v: new Date().getTime()\n    });\n  }\n\n  getTokenInfo(symbol) {\n    var ssc = this.ssc;\n    return new Promise((resolve, reject) => {\n      ssc.find(\n        \"tokens\",\n        \"tokens\",\n        { symbol: symbol },\n        1000,\n        0,\n        [],\n        (err, result) => {\n          console.log(result);\n          if (err) reject(err);\n          resolve(result);\n        }\n      );\n    });\n  }\n\n  getInfo(symbol) {\n    var ssc = this.ssc;\n    var token_info = {};\n    ssc.stream((err, res) => {});\n\n    return new Promise((resolve, reject) => {\n      ssc.find(\n        \"market\",\n        \"metrics\",\n        { symbol: symbol },\n        1000,\n        0,\n        [],\n        (err, result) => {\n          token_info = {\n            lastPrice: result[0].lastPrice,\n            volume: result[0].volume,\n            highestBid: result[0].highestBid,\n            lowestAsk: result[0].lowestAsk\n          };\n          if (err) reject(err);\n          resolve(token_info);\n        }\n      );\n    });\n  }\n\n  async getHoldersAsync(symbol) {\n    var ssc = this.ssc;\n    var holders_info = [];\n    var cnt = 500;\n    var getCnt = 0;\n    while (true) {\n      var holders = await this.getHolderOnce(symbol, getCnt * cnt, cnt);\n      getCnt = getCnt + 1;\n      holders_info = holders_info.concat(holders);\n      if (holders.length < cnt) {\n        return holders_info;\n      }\n    }\n  }\n\n  async getHolderOnce(symbol, offset = 0, limit = 100) {\n    return new Promise((resolve, reject) => {\n      this.ssc.find(\n        \"tokens\",\n        \"balances\",\n        { symbol: symbol },\n        limit,\n        offset,\n        [],\n        (err, result) => {\n          // console.log(\"limit\", limit);\n          // console.log(\"offset\", offset);\n          // console.log(\"result\", result);\n          resolve(result);\n        }\n      );\n    });\n  }\n\n  getHolders(symbol) {\n    var ssc = this.ssc;\n    var holders_info = [];\n    var holders = [];\n    return new Promise((resolve, reject) => {\n      this.getHoldersAsync(symbol).then(result => {\n        // filtering balance more than 0\n        console.log(\"getHolders\", result);\n        if (result[0].stake === undefined) /// should check.. and change\n        {\n          result = result.filter(item => item.account != \"null\");\n          result = result.filter(item => item.balance * 1 > 0);\n          result.sort(function(a, b) {\n            return b.balance - a.balance;\n          });\n        } else {\n          result = result.filter(item => item.account != \"null\");\n          result = result.filter(item => item.stake * 1 + item.balance * 1 > 0);\n          result.sort(function(a, b) {\n            var b_sum = b.balance * 1 + b.stake * 1;\n            var a_sum = a.balance * 1 + a.stake * 1;\n            return b_sum - a_sum;\n          });\n        }\n        var sumBalance = 0;\n        var sumStake = 0;\n        var sumStakeBalance = 0;\n        /// add all balances\n        for (const holder of result) {\n          sumBalance = sumBalance + 1 * holder.balance;\n          sumStake = sumStake + 1 * holder.stake;\n        }\n        /// remove maintainer balances\n        for (const mt of this.maintainer) {\n          var maintainer = this.findAccount(result, mt);\n          if (maintainer !== undefined)\n            sumBalance = sumBalance - maintainer.balance;\n        }\n\n        holders_info.push(sumBalance);\n        sumStakeBalance = sumBalance * 1 + sumStake * 1;\n        if (isNaN(sumStake)) {\n          sumStakeBalance = sumBalance;\n          sumStake = 0;\n        }\n\n        /// calculate rate\n        var holder_id = 0;\n        for (const holder of result) {\n          holder_id = holder_id + 1;\n          holder.rate = holder.balance / sumBalance;\n          for (const mt of this.maintainer) {\n            if (holder.account === mt) holder.rate = 0;\n          }\n          var voting_rate = 1;\n          if (holder.balance / 1000 > 45) voting_rate = voting_rate + 45;\n          else voting_rate = voting_rate + Math.floor(holder.balance / 1000);\n\n          if (holder.stake == undefined) {\n            holders.push({\n              account: holder.account,\n              sum: holder.balance * 1,\n              stake: 0,\n              balance: holder.balance,\n              delegated: 0,\n              received: 0,\n              pending_unstake: 0,\n              rate: holder.rate * 1,\n              voting_rate: voting_rate,\n              hid: holder_id\n            });\n          } else {\n            var delegated = 0;\n            var received = 0;\n            var stake_with_delegated = holder.stake * 1;\n\n            if (holder.delegationsIn != undefined) {\n              stake_with_delegated =\n                stake_with_delegated + holder.delegationsIn * 1;\n            }\n\n            if (holder.delegatedStake == undefined) {\n              delegated = holder.delegationsOut;\n            }\n            if (holder.receivedStake == undefined) {\n              received = holder.delegationsIn;\n            }\n\n            holders.push({\n              account: holder.account,\n              sum: holder.balance * 1 + holder.stake * 1,\n              stake: stake_with_delegated,\n              balance: holder.balance,\n              delegated,\n              received,\n              pending_unstake: holder.pendingUnstake,\n              rate: holder.rate * 1,\n              voting_rate: voting_rate,\n              hid: holder_id\n            });\n          }\n        }\n        // if (err) reject(err);\n        holders_info.push(holders);\n        holders_info.push(sumStake);\n        holders_info.push(sumStakeBalance);\n\n        resolve(holders_info);\n      });\n    });\n  }\n\n  findAccount = (holders, account) => {\n    return holders.find(function(a) {\n      return a.account === account;\n    });\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}