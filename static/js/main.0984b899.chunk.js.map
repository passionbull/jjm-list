{"version":3,"sources":["index.js","App.js","View/HolderListItem.js","Steem/steemController.js","Steem/steemConnect.js","serviceWorker.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactDom","_App","serviceWorker","_interopRequireWildcard","ReactDOM","render","default","createElement","document","getElementById","unregister","_reactNativeWeb","_sscjs","_HolderListItem","_steemController","_steemConnect","sc","steemController","App","state","holders","symbol","maintainer","sum_balance","holderCnt","holderAll","updated","watingListUpdate","getPostingFromDate","modalVisible","sign_in","getWatingList","_this","setState","holder_id","dt","Date","setDate","getDate","startDate","toISOString","split","show_posting_time","toLocaleString","voterDate","show_voter_time","tHolders","holders_data","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","holder","value","getPostingByBlog","account","_assertThisInitialized2","err","return","filtering","window","alert","filter","item","voted","latest_posting_jjm","balance","console","log","actionVoting","votedReculsive","sscLoad","arguments","ssc","SSC","stream","res","find","result","lastPrice","volume","highestBid","lowestAsk","tData","sort","a","b","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","sumBalance","_arr","_i","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","mt","findAccount","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","rate","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","voting_rate","Math","floor","hid","loginSteemConnect2","getLoginURL","revokeToken","link","steemConnect","location","href","AsyncStorage","removeItem","checkToken","url","indexOf","tokens","params","forEach","e","_e$split","_e$split2","_slicedToArray2","key","val","setItem","access_token","error","getAsyncToken","_callee","_regenerator","wrap","_context","prev","getItem","sent","abrupt","t0","warn","stop","_this2","this","cnt","list","index","that","vote","steem_account","_this3","View","style","flex","flexDirection","width","paddingLeft","paddingTop","ActivityIndicator","size","color","paddingRight","Button","title","disabled","onPress","Text","fontWeight","fontSize","paddingBottom","toFixed","padding","FlatList","data","extraData","renderItem","_ref2","id","holderID","latestLink","_this4","then","token","setAccessToken","me","_ref3","JSON","parse","json_metadata","profile","name","catch","author","start_author","start_permlink","c","query","tag","limit","getDiscussionsByBlog","response","length_posts","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","post","created","active_votes","voter","permlink","updatedCallback","Component","hotWrapper","Platform","OS","require","hot","module","HolderListItem","_onPress","borderWidth","props","React","PureComponent","_steem","client","Client","getVotingInfo","database","call","o","getPosting","_callee2","comp","last_permlink","last_author","postInfo","_args2","_context2","getDiscussionsByCreated","posts","slice","Promise","resolve","reject","steem","api","sc2","Initialize","app","callbackURL","accessToken","scope","config","navigator","publicUrl","URL","process","origin","addEventListener","swUrl","concat","isLocalhost","fetch","contentType","headers","get","status","ready","registration","reload","registerValidSW","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.0984b899.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport {\n  Text,Platform,\n  View, AsyncStorage,\n  Button, FlatList, ActivityIndicator\n} from 'react-native';\nimport SSC from 'sscjs';\nimport HolderListItem from './View/HolderListItem';\nimport steemController from './Steem/steemController'\nimport steemConnect from './Steem/steemConnect';\n\nvar sc = new steemController();\n\nclass App extends Component {\n    state = {\n        holders: [],\n        symbol: '',\n        maintainer: ['virus707', 'goldenticket', 'jjm13'],\n        sum_balance:'',\n        holderCnt:0, holderAll:0,\n        updated: true, watingListUpdate: false, getPostingFromDate: 7,\n        modalVisible: false,\n        sign_in: false,\n\n    }\n\n    getWatingList = () => {\n        // update holders link and voted\n        this.setState({holderCnt:0, updated:false})\n        var holder_id = 0;\n        var dt = new Date();  \n        dt.setDate(dt.getDate() - this.state.getPostingFromDate);\n        var startDate = dt.toISOString().split('.')[0];\n        var show_posting_time = dt.toLocaleString();\n\n        var voterDate = new Date();  \n        voterDate.setDate(voterDate.getDate() - 1);\n        var show_voter_time = voterDate.toLocaleString();\n        voterDate = voterDate.toISOString().split('.')[0];\n        \n\n        var tHolders = this.state.holders_data\n        \n        this.setState({holderAll:tHolders.length, show_posting_time, show_voter_time})\n        for (const holder of tHolders) {\n            this.getPostingByBlog(holder.account,'','',this, holder_id, tHolders, startDate, voterDate, 0);\n            holder_id = holder_id +1;\n        }        \n    }\n\n    filtering = () => {\n\n        var holders = this.state.holders_data;\n        this.setState({updated:false, holders_data:[]},\n            () => {\n                window.alert('updated!');\n                holders = holders.filter(item => item.voted !== true)\n                holders = holders.filter(item => item.latest_posting_jjm !== \"\")\n                holders = holders.filter(item => item.balance >=100)\n                // holders.sort(function(x, y) {\n                //     return (x.voted === y.voted)? 0 : x.voted? 1 : -1;\n                // });\n\n                console.log(holders);\n                this.setState({updated:true,holders_data:holders, watingListUpdate:true})\n            })\n    }    \n\n    updatedCallback(holders){\n        var cnt = this.state.holderCnt;\n        cnt = cnt + 1;\n        this.setState({holderCnt:cnt})\n        if(cnt === this.state.holderAll)\n        {\n            console.log(holders);\n            this.setState({\n                holders_data:holders,\n                updated:true\n            }, \n            () => {\n                // window.alert('updated!');\n                this.filtering();\n                  }\n            );\n        }\n    }\n\n    votedReculsive(list, index,length,that){\n        steemConnect.vote(that.state.steem_account,list[index].account, list[index].latest_posting_jjm, list[index].voting_rate*100, function(err,res){\n            console.log('index',index, list[index].account);\n            console.log(err,res);\n            index = index + 1;\n            if(index === length){\n                that.setState({updated:true})\n                window.alert('updated!');\n                return;\n            }\n            that.votedReculsive(list,index,length,that);\n        })\n    }\n\n    actionVoting = () => {\n        var holders = this.state.holders_data;\n        this.setState({updated:false, watingListUpdate:false},()=>{\n            this.votedReculsive(holders,0,holders.length,this);\n        })\n    }\n\n    render() {\n        return (\n\n        <View style={{flex: 1,}}>\n            <View style={{flex: 1, flexDirection: 'row', width:500, paddingLeft: 20, paddingTop: 20}}>\n                {this.state.updated === true? <View/> :<ActivityIndicator size=\"large\" color=\"#0000ff\" />}\n                <View style={{flex: 1,paddingRight:10}}>\n                    <Button style={{}} title='Waiting list' disabled={this.state.updated === true? false:true} onPress={this.getWatingList}/>\n                </View>\n                <View style={{flex: 1,paddingRight:10}}>\n                    <Button style={{}} title='Voting' disabled={this.state.watingListUpdate === true? false:true} onPress={this.actionVoting}/>\n                </View>\n                <View style={{flex: 1,}}>\n                    <Button style={{}} title={this.state.sign_in === false? 'Sign in with SteemConnect':'Sign out'} onPress={this.loginSteemConnect2}/>\n                </View>\n            </View>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 20, paddingLeft: 20, paddingTop: 20, paddingBottom:3}}>Token Info</Text>\n            <Text style={{color: 'black', fontSize: 15, paddingLeft: 20, paddingBottom: 5}}>Last: {this.state.lastPrice} STEEM, 24h Vol: {this.state.volume} STEEM, Bid: {this.state.highestBid} STEEM, Ask: {this.state.lowestAsk} STEEM</Text>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 16, paddingLeft: 20, paddingBottom: 3}}>총 홀더 수 : {this.state.holders.length}</Text>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 16, paddingLeft: 20}}>유통물량 : {(this.state.sum_balance*1).toFixed(2)} JJM</Text>\n            <View style={{flex: 1, flexDirection: 'row', paddingTop: 30, paddingLeft: 20}}>\n            <Text style={{flex: 1, color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Account</Text>\n            <Text style={{flex: 1, color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Balance</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Stake</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Voting Percent</Text>\n            <Text style={{flex: 0.5,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Voted after {this.state.show_voter_time}</Text>\n            <Text style={{flex: 1,color: 'black', fontWeight: 'bold', fontSize: 20, padding: 3}}>Latest link after {this.state.show_posting_time}</Text>\n            </View>\n            <View style={{flex: 1, paddingLeft: 20}}>\n            <FlatList\n                data= {this.state.holders_data}\n                extraData={this.state.updated}\n                renderItem={({item}) => <HolderListItem id={item.id} account ={item.account} balance = { (1*item.balance).toFixed(2)+' '+this.state.symbol} voting_rate = {item.voting_rate}\n                rate = {item.rate} holderID = {item.hid} voted = {item.voted} latestLink ={'https://busy.org/@'+item.account+'/'+item.latest_posting_jjm}/>}\n                />\n            </View>\n        </View>\n\n        )\n    }\n\n\n\n    sscLoad = (symbol= 'JJM') =>{\n        const ssc = new SSC('https://api.steem-engine.com/rpc/');\n        ssc.stream((err, res) => {\n        });\n    \n        ssc.find('market', 'metrics', {'symbol':symbol}, 1000, 0, [], (err, result) => {\n          this.setState({\n            lastPrice: result[0].lastPrice,\n            volume: result[0].volume,\n            highestBid: result[0].highestBid,\n            lowestAsk: result[0].lowestAsk\n          });\n        });\n    \n    \n        ssc.find('tokens', 'balances', {'symbol':symbol}, 1000, 0, [], (err, result) => {\n          var tHolders = []\n          var tData = []\n    \n          result.sort(function (a,b){\n            return b.balance - a.balance;\n          });\n          for (var holder of result) {\n            tHolders.push(holder)\n          }\n          var sumBalance = 0;\n    \n          /// add all balances\n          for (const holder of tHolders) {\n              sumBalance = sumBalance + 1*(holder.balance);\n          }\n    \n          /// remove maintainer balances\n          for (const mt of this.state.maintainer) {\n            var maintainer = this.findAccount(tHolders,mt);\n            if(maintainer !== undefined) \n              sumBalance = sumBalance - maintainer.balance;\n          }\n          this.setState({sum_balance: sumBalance});\n\n          // filtering balance more than 0\n          tHolders = tHolders.filter(item => (item.balance*1) > 0)\n\n          /// calculate rate\n            var holder_id = 0;\n            for (const holder of tHolders) {\n                holder_id = holder_id +1;\n                holder.rate = holder.balance / sumBalance;\n                for (const mt of this.state.maintainer) {\n                    if(holder.account === mt) \n                        holder.rate = 0;\n                    }\n                var voting_rate = 1;\n                if(holder.balance/1000 > 45)\n                    voting_rate = voting_rate + 45;\n                else\n                    voting_rate = voting_rate + Math.floor(holder.balance/1000);\n                \n                \n                \n                tData.push({account: holder.account, balance: holder.balance, rate: (holder.rate*1), \n                            hid:holder_id, voting_rate:voting_rate})\n            }\n            this.setState({holders: tHolders, holders_data: tData, sum_balance: sumBalance},\n                            () => {\n                                    // this.onPressButton1();\n                                }\n                          );\n        })\n    }\n\n    findAccount = (holders, account) =>\n    {\n      return holders.find(function(a){return a.account === account;});\n    }\n  \n    componentDidMount(){\n      var _symbol = 'JJM'\n      this.setState({symbol:_symbol});\n      this.sscLoad(_symbol);\n\n      var link = window.location.href;\n      this.checkToken(link);\n      this.getAsyncToken().then((token) => {\n          if(token === null)\n          {\n              this.setState({sign_in:false});\n          }\n          else\n          {\n              // AccessToken 셋팅\n              steemConnect.setAccessToken(token);\n              // 계정 정보 조회\n              steemConnect.me().then(({ account }) => {\n                  \n                  const { profile }  = JSON.parse(account.json_metadata);\n                  console.log('profile', account);\n                  this.setState({sign_in:true,steem_account:account.name});\n              }).catch(function(e){\n              });\n          }\n      });\n    }\n\n\n\n    loginSteemConnect2 = () => {\n        // Go to Commit screen\n        if(this.state.sign_in === false)\n            this.getLoginURL();\n        else\n            this.revokeToken();\n    }\n        \n    getLoginURL = () =>{\n        let link = steemConnect.getLoginURL();\n        window.location.href = link;\n    }\n\n    revokeToken = () =>{\n        steemConnect.revokeToken(function (err,res){\n            console.log(res);\n            AsyncStorage.removeItem('token');\n        })\n        this.setState({sign_in:false});\n    }\n\n    checkToken = (url) => {\n        if (url.indexOf('?access_token') > -1) {\n          try {\n            const tokens = {};\n            // 콜백 URL에서 accessToken 정보 추출하기\n            let params = url.split('?')[1];\n            params = params.split('&');\n            params.forEach(e => {\n              const [key, val] = e.split('=');\n              tokens[key] = val;\n            });\n            console.log('tokens:', tokens);\n            AsyncStorage.setItem('token', tokens.access_token);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      };\n\n    getAsyncToken = async () => {\n        try {\n            const value = await AsyncStorage.getItem('token');\n            return await value;\n        } catch (e) {\n            console.warn(e)\n            return null\n        }\n    };      \n\n    getPostingByBlog(author, start_author= '', start_permlink = '',that, holder_id, holders, startDate, voterDate, c){\n        const size = 50;\n        var query = {\n            'tag': author,\n            'limit': size,\n            'start_author': start_author,\n            'start_permlink': start_permlink\n        };\n        sc.getDiscussionsByBlog(query).then(function(response) {\n            var length_posts = response.length\n            var voted = false;\n            var latest_posting_jjm = ''\n            for (const post of response) {\n                if(post.author === query.tag){\n                    if(post.created > voterDate){\n                        if(voted ===false){\n                            voted = post.active_votes.find(function(a){return (a.voter === 'virus707')});\n                        }\n                        if( c === 0){\n                            latest_posting_jjm = post.permlink;\n                        }\n                        if (voted !== undefined)\n                            voted = true;\n                        else if(voted === undefined)\n                            voted = false;\n                        c = c + 1;\n                    }\n               }\n            }\n            if(length_posts < size || response[length_posts-1].created< startDate){      \n                if(holders[holder_id].account === author){\n                    holders[holder_id].voted = voted;\n                    holders[holder_id].latest_posting_jjm = latest_posting_jjm;\n                    that.updatedCallback(holders);\n                }\n                else{\n                    console.log('something is wrong.');\n                }\n                return;     \n            }\n            var start_author= response[length_posts-1].author;\n            var start_permlink= response[length_posts-1].permlink;\n            that.getPostingByBlog(author, start_author, start_permlink,that,holder_id,holders,startDate, voterDate, c);\n        });\n    }\n}\n \n\nlet hotWrapper = () => () => App;\nif (Platform.OS === 'web') {\n  const { hot } = require('react-hot-loader');\n  hotWrapper = hot;\n}\nexport default hotWrapper(module)(App);\n","import React, { Component } from 'react';\nimport {\n    Text,\n    View,\n} from 'react-native';\n  \n\n\nexport default class HolderListItem extends React.PureComponent {\n    _onPress = () => {\n    };\n\n    render() {\n      return (\n          <View style={{flex: 1, flexDirection: 'row', paddingTop: 5,}}>\n            <View style={{flex: 1, borderWidth: 0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3}}>{this.props.holderID+'-'+this.props.account}</Text>\n            </View>\n  \n            <View style={{flex: 1, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3}}>{this.props.balance}</Text>\n            </View>\n  \n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{(100*this.props.rate).toFixed(3)}%</Text>\n            </View>\n\n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voting_rate}%</Text>\n            </View>\n\n            <View style={{flex: 0.5, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voted === undefined? '':''+this.props.voted}</Text>\n            </View>\n\n            <View style={{flex: 1, borderWidth:0.1}}>\n              <Text style={{flex: 1, color: 'black', fontSize: 15, padding: 3, paddingLeft:10}}>{this.props.voted === undefined? '':this.props.latestLink}</Text>\n            </View>\n\n\n          </View>\n  \n        );\n    }\n}","import steem from 'steem'\nimport {Client} from 'dsteem'\nconst client = new Client('https://api.steemit.com')\n\nexport default class steemController{\n    getVotingInfo = async (post) => {\n        return await client.database\n            .call('get_active_votes', [post.author, post.permlink])\n            .then(result => {\n                if(result.find(o => o.voter === 'virus707') ===undefined){\n                    console.log('Wait!!! voting ->'+post.author);\n                    post['voted'] = false;\n                }\n                else{\n                    console.log('Got!!! voting ->'+ post.author);\n                    post['voted'] = true;\n                }\n            });\n    };\n\n\n    getPosting = async (size, comp ,last_permlink='', last_author='') => {\n        size = size +1;\n        var query = {\"tag\": \"jjm\", \"limit\": size, \"start_permlink\":last_permlink, \"start_author\":last_author};\n        var postInfo = {'this':comp}\n        try{\n            let post = await this.getDiscussionsByCreated(query);\n            postInfo.posts = post.slice(0,size-1);\n            postInfo.last_permlink = post[size-1].permlink;\n            postInfo.last_author = post[size-1].author;\n        }catch(err){\n            console.log('err',err);\n        }\n        return await postInfo;\n    }\n\n    getDiscussionsByCreated = (query) => {\n        return new Promise((resolve, reject) => {\n          steem.api.getDiscussionsByCreated(query, function(err, response) {\n         if(err){\n           reject(err);\n         }\n         resolve(response);\n        });\n       });\n    }\n\n    getDiscussionsByBlog = (query) => {\n        return new Promise((resolve, reject) => {\n          steem.api.getDiscussionsByBlog(query, function(err, response) {\n         if(err){\n           reject(err);\n         }\n         resolve(response);\n        });\n       });\n    }\n    \n}","import sc2 from 'sc2-sdk';\n// import Config from '../../config';\n\nconst api = sc2.Initialize({\n  app: 'wp-steem-share',\n  callbackURL: 'https://passionbull.github.io/jjm-list',\n\taccessToken: 'access_token',\n\tscope: ['vote', 'comment']\n});\n\nexport default api;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}