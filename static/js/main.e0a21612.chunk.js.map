{"version":3,"sources":["Utils/Routing.web.js","index.js","App.js","Component/Payout.js","Steem/steemConnect.js","Component/Voting.js","Component/Home.js","serviceWorker.js"],"names":["_reactRouterDom","__webpack_require__","_react","_interopRequireDefault","_reactDom","_App","serviceWorker","_interopRequireWildcard","ReactDOM","render","default","createElement","document","getElementById","unregister","_reactNativeWeb","_Payout","_Voting","_Home","_Routing","App","Router","Switch","Route","exact","path","component","Home","Voting","PayOut","Component","hotWrapper","Platform","OS","require","hot","module","_steemConnect","Payout","modalVisible","sign_in","_that","_assertThisInitialized2","_this","state","getLoginURL","revokeToken","link","steemConnect","window","location","href","err","res","console","log","AsyncStorage","removeItem","setState","url","indexOf","tokens","params","split","forEach","e","_e$split","_e$split2","_slicedToArray2","key","val","setItem","access_token","error","_callee","value","_regenerator","wrap","_context","prev","next","getItem","sent","abrupt","t0","warn","stop","View","style","flex","flexDirection","width","paddingLeft","paddingTop","Button","title","this","onPress","onPressButton1","Text","color","fontWeight","fontSize","paddingBottom","_this2","checkToken","getAsyncToken","then","token","setAccessToken","me","_ref2","account","profile","JSON","parse","json_metadata","catch","sc2","Initialize","app","callbackURL","accessToken","scope","_sscjs","_reactNativeTableComponent","holders","symbol","maintainer","sum_balance","tableHead","tableData","props","history","push","arguments","length","undefined","ssc","SSC","stream","find","result","lastPrice","volume","highestBid","lowestAsk","tHolders","tData","tTableData","sort","a","b","balance","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","holder","return","sumBalance","_arr","_i","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","mt","findAccount","_arr2","_i2","rate","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","toFixed","holders_data","paddingRight","onPressButton2","Table","borderStyle","borderWidth","borderColor","Row","data","styles","head","textStyle","margin","Rows","text","sscLoad","StyleSheet","create","container","padding","backgroundColor","height","withRouter","config","navigator","publicUrl","URL","process","origin","addEventListener","swUrl","concat","isLocalhost","fetch","response","contentType","headers","get","status","ready","registration","reload","registerValidSW","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.e0a21612.chunk.js","sourcesContent":["export {\n    BrowserRouter as Router,\n    Link,\n    Route,\n    Switch,\n    withRouter\n  } from 'react-router-dom';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport {\n  Platform,\n} from 'react-native';\nimport PayOut from './Component/Payout';\nimport Voting from './Component/Voting';\nimport Home from './Component/Home';\nimport { Route, Router, Switch } from './Utils/Routing';\n\nclass App extends Component {\n  render() {\n    return (\n\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/voting\" component={Voting} />\n          <Route exact path=\"/payout\" component={PayOut} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\n\nlet hotWrapper = () => () => App;\nif (Platform.OS === 'web') {\n  const { hot } = require('react-hot-loader');\n  hotWrapper = hot;\n}\nexport default hotWrapper(module)(App);\n","import React, { Component } from 'react';\nimport {\n  Text, Button,\n  View, AsyncStorage\n} from 'react-native';\nimport steemConnect from '../Steem/steemConnect';\n\n\n\n\nexport default class Payout extends Component {\n\n    \n    state = {\n        modalVisible: false,\n        sign_in: false,\n        _that: this\n    }\n\n    onPressButton1 = () => {\n        // Go to Commit screen\n        if(this.state.sign_in === false)\n            this.getLoginURL();\n        else\n            this.revokeToken();\n    }\n\n    render() {\n        return (\n        <View style={{flex: 1,}}>\n            <View style={{flex: 1, flexDirection: 'row', width:150, paddingLeft: 10, paddingTop: 20}}>\n                <View style={{flex: 1,}}>\n                    <Button style={{}} title={this.state.sign_in === false? 'Sign in with SteemConnect':'Sign out'} onPress={this.onPressButton1}/>\n                </View>\n            </View>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 20, paddingLeft: 10, paddingTop: 20, paddingBottom:3}}>Payout</Text>\n        </View>\n        )\n    }\n\n    componentDidMount(){\n        var link = window.location.href;\n        console.log('xxx',link);\n        this.checkToken(link);\n\n        this.getAsyncToken().then((token) => {\n            if(token === null)\n            {\n                this.setState({sign_in:false});\n            }\n            else\n            {\n                // AccessToken 셋팅\n                steemConnect.setAccessToken(token);\n                // 계정 정보 조회\n                steemConnect.me().then(({ account }) => {\n                    const { profile }  = JSON.parse(account.json_metadata);\n                    console.log('profile', profile);\n                    this.setState({sign_in:true});\n                }).catch(function(e){\n                });\n            }\n        });\n\n\n    }\n\n    getLoginURL = () =>{\n        let link = steemConnect.getLoginURL();\n        window.location.href = link;\n    }\n\n    revokeToken = () =>{\n        steemConnect.revokeToken(function (err,res){\n            console.log(res);\n            AsyncStorage.removeItem('token');\n        })\n        this.setState({sign_in:false});\n    }\n\n    checkToken = (url) => {\n        if (url.indexOf('?access_token') > -1) {\n          try {\n            const tokens = {};\n            // 콜백 URL에서 accessToken 정보 추출하기\n            let params = url.split('?')[1];\n            params = params.split('&');\n            params.forEach(e => {\n              const [key, val] = e.split('=');\n              tokens[key] = val;\n            });\n            console.log('tokens:', tokens);\n            AsyncStorage.setItem('token', tokens.access_token);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      };\n    getAsyncToken = async () => {\n        try {\n            const value = await AsyncStorage.getItem('token');\n            return await value;\n        } catch (e) {\n            console.warn(e)\n            return null\n        }\n    };      \n    \n\n}\n// export default withRouter(Home);","import sc2 from 'sc2-sdk';\n// import Config from '../../config';\n\nconst api = sc2.Initialize({\n  app: 'wp-steem-share',\n  callbackURL: 'http://localhost:3000/payout',\n\taccessToken: 'access_token',\n\tscope: ['vote', 'comment', 'custom_json', ]\n});\n\nexport default api;\n","import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n} from 'react-native';\n\n\nexport default class Voting extends Component {\n \n    state = {\n    }\n\n    render() {\n        return (\n\n        <View style={{flex: 1,}}>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 20, paddingLeft: 10, paddingTop: 20, paddingBottom:3}}>Voting</Text>\n        </View>\n\n        )\n    }\n\n    componentDidMount(){\n    }\n}\n// export default withRouter(Home);","import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  Button, StyleSheet\n} from 'react-native';\nimport SSC from 'sscjs';\nimport { withRouter } from '../Utils/Routing';\nimport { Table, Row, Rows } from 'react-native-table-component';\n\n\nclass Home extends Component {\n \n    state = {\n        holders: [],\n        symbol: '',\n        maintainer: ['virus707', 'goldenticket', 'jjm13'],\n        sum_balance:'',\n        tableHead: ['Account', 'Balance', 'Rate'],\n        tableData:[]\n    }\n\n    onPressButton1 = () => {\n        // Go to Commit screen\n        this.props.history.push('/voting');\n    }\n    onPressButton2 = () => {\n        // Go to Commit screen\n        this.props.history.push('/payout');\n    }\n\n    render() {\n        return (\n\n        <View style={{flex: 1,}}>\n            <View style={{flex: 1, flexDirection: 'row', width:220, paddingLeft: 10, paddingTop: 20}}>\n                <View style={{flex: 1,paddingRight:10}}>\n                    <Button style={{}} title='Voting list' onPress={this.onPressButton1}/>\n                </View>\n                <View style={{flex: 1,}}>\n                    <Button style={{}} title='Payout' onPress={this.onPressButton2}/>\n                </View>\n            </View>\n            <Text style={{color: 'black', fontWeight: 'bold', fontSize: 20, paddingLeft: 10, paddingTop: 20, paddingBottom:3}}>Token Info</Text>\n            <Text style={{color: 'black', fontSize: 15, paddingLeft: 10, paddingBottom: 5}}>Last: {this.state.lastPrice} STEEM, 24h Vol: {this.state.volume} STEEM, Bid: {this.state.highestBid} STEEM, Ask: {this.state.lowestAsk} STEEM</Text>\n            <Text style={{color: 'black', fontWeight: 'bold', paddingLeft: 10, fontSize: 16, paddingBottom: 3}}>총 홀더 수 : {this.state.holders.length}</Text>\n            <Text style={{color: 'black', fontWeight: 'bold', paddingLeft: 10, fontSize: 16, paddingBottom: 20}}>유통물량 : {(this.state.sum_balance*1).toFixed(2)} JJM</Text>\n            <View style={{flex: 1,paddingLeft: 10}}>\n                <Table style={{}} borderStyle={{borderWidth: 2, borderColor: '#c8e1ff'}}>\n                    <Row data={this.state.tableHead} style={styles.head} textStyle={{ margin: 6, fontWeight:'bold', fontSize: 18 }}/>\n                    <Rows data={this.state.tableData} textStyle={styles.text}/>\n                </Table>\n            </View>\n        </View>\n\n        )\n    }\n\n\n    sscLoad = (symbol= 'JJM') =>{\n        const ssc = new SSC('https://api.steem-engine.com/rpc/');\n        ssc.stream((err, res) => {\n            // console.log(err, res);\n        });\n    \n        ssc.find('market', 'metrics', {'symbol':symbol}, 1000, 0, [], (err, result) => {\n          this.setState({\n            lastPrice: result[0].lastPrice,\n            volume: result[0].volume,\n            highestBid: result[0].highestBid,\n            lowestAsk: result[0].lowestAsk\n          });\n        });\n    \n    \n        ssc.find('tokens', 'balances', {'symbol':symbol}, 1000, 0, [], (err, result) => {\n          var tHolders = []\n          var tData = []\n          var tTableData = []\n    \n          result.sort(function (a,b){\n            return b.balance - a.balance;\n          });\n          for (var holder of result) {\n            tHolders.push(holder)\n          }\n          console.log(tHolders);\n          var sumBalance = 0;\n    \n          /// add all balances\n          for (const holder of tHolders) {\n              sumBalance = sumBalance + 1*(holder.balance);\n          }\n    \n          /// remove maintainer balances\n          for (const mt of this.state.maintainer) {\n            var maintainer = this.findAccount(tHolders,mt);\n            if(maintainer !== undefined) \n              sumBalance = sumBalance - maintainer.balance;\n          }\n          console.log('sum balance : '+ sumBalance);\n          this.setState({sum_balance: sumBalance});\n    \n          \n          /// calculate rate\n          for (const holder of tHolders) {\n            holder.rate = holder.balance / sumBalance;\n    \n            for (const mt of this.state.maintainer) {\n              if(holder.account === mt) \n                holder.rate = 0;\n            }\n            tData.push({account: holder.account, balance: (holder.balance*1).toFixed(2)+' '+symbol, rate: (holder.rate*1).toFixed(3)})\n            tTableData.push([holder.account, (holder.balance*1).toFixed(2)+' '+symbol, (holder.rate*1).toFixed(3)])\n          }\n          this.setState({holders: tHolders, holders_data: tData, sum_balance: sumBalance,\n                            tableData:tTableData\n                        });\n        })\n    \n    }\n\n    findAccount = (holders, account) =>\n    {\n      return holders.find(function(a){return a.account === account;});\n    }\n  \n    componentDidMount(){\n      var _symbol = 'JJM'\n      this.setState({symbol:_symbol});\n      this.sscLoad(_symbol);\n    }\n}\nconst styles = StyleSheet.create({\n    container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\n    head: { height: 40, backgroundColor: '#f1f8ff'},\n    text: { margin: 6 }\n  });\n \nexport default withRouter(Home);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}