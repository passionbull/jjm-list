{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(nullTag, \"nullTag\", \"/home/jacob/workspace/react_native/steem-engine/steem-engine-allocation/myApp/node_modules/lodash/_baseGetTag.js\");\n  reactHotLoader.register(undefinedTag, \"undefinedTag\", \"/home/jacob/workspace/react_native/steem-engine/steem-engine-allocation/myApp/node_modules/lodash/_baseGetTag.js\");\n  reactHotLoader.register(symToStringTag, \"symToStringTag\", \"/home/jacob/workspace/react_native/steem-engine/steem-engine-allocation/myApp/node_modules/lodash/_baseGetTag.js\");\n  reactHotLoader.register(baseGetTag, \"baseGetTag\", \"/home/jacob/workspace/react_native/steem-engine/steem-engine-allocation/myApp/node_modules/lodash/_baseGetTag.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}